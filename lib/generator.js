// Generated by CoffeeScript 1.3.3
var Generator, Stream, util;

Stream = require('stream');

util = require('util');

/*

`generator([options])`: Generate random CSV data
------------------------------------------------

Options may include
*   duration          Period to run in milliseconds, default to 4 minutes.
*   nb_columns        Number of fields per record
*   max_word_length   Maximum number of characters per word
*   start             Start the generation right away, otherwise call resume
*/


Generator = function(options) {
  var _base, _base1, _ref, _ref1;
  this.options = options != null ? options : {};
  if ((_ref = (_base = this.options).duration) == null) {
    _base.duration = 4 * 60 * 1000;
  }
  this.options.nb_columns = 8;
  if ((_ref1 = (_base1 = this.options).max_word_length) == null) {
    _base1.max_word_length = 16;
  }
  this.start = Date.now();
  this.end = this.start + this.options.duration;
  this.readable = true;
  if (this.options.start) {
    process.nextTick(this.resume.bind(this));
  }
  return this;
};

util.inherits(Generator, Stream);

Generator.prototype.resume = function() {
  var char, column, line, nb_chars, nb_words, _i, _j, _ref, _ref1;
  this.paused = false;
  while (!this.paused && this.readable) {
    if (Date.now() > this.end) {
      return this.destroy();
    }
    line = [];
    for (nb_words = _i = 0, _ref = this.options.nb_columns; 0 <= _ref ? _i < _ref : _i > _ref; nb_words = 0 <= _ref ? ++_i : --_i) {
      column = [];
      for (nb_chars = _j = 0, _ref1 = Math.ceil(Math.random() * this.options.max_word_length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; nb_chars = 0 <= _ref1 ? ++_j : --_j) {
        char = Math.floor(Math.random() * 32);
        column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)));
      }
      line.push(column.join(''));
    }
    this.emit('data', "" + (line.join(',')) + "\n");
  }
};

Generator.prototype.pause = function() {
  return this.paused = true;
};

Generator.prototype.destroy = function() {
  this.readable = false;
  this.emit('end');
  return this.emit('close');
};

module.exports = function(options) {
  return new Generator(options);
};

module.exports.Generator = Generator;
