// Generated by CoffeeScript 1.3.3
var fs, utils;

fs = require('fs');

utils = require('./utils');

module.exports = function(csv) {
  var options;
  options = {
    delimiter: ',',
    quote: '"',
    escape: '"',
    columns: null,
    flags: 'r',
    encoding: 'utf8',
    bufferSize: 8 * 1024 * 1024,
    trim: false,
    ltrim: false,
    rtrim: false
  };
  return {
    options: function() {
      if (arguments.length) {
        utils.merge(options, arguments[0]);
        return csv;
      } else {
        return options;
      }
    },
    array: function(data, options) {
      this.options(options);
      process.nextTick(function() {
        var i, _i, _ref;
        for (i = _i = 0, _ref = data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          csv.write(data[i]);
        }
        return csv.end();
      });
      return csv;
    },
    string: function(data, options) {
      this.options(options);
      process.nextTick(function() {
        csv.write(data);
        return csv.end();
      });
      return csv;
    },
    path: function(path, options) {
      var stream;
      this.options(options);
      stream = fs.createReadStream(path, csv.from.options());
      stream.setEncoding(csv.from.options().encoding);
      return csv.from.stream(stream, null);
    },
    stream: function(readStream, options) {
      this.options(options);
      readStream.on('data', function(data) {
        return csv.write(data.toString());
      });
      readStream.on('error', function(e) {
        return error(e);
      });
      readStream.on('end', function() {
        return csv.end();
      });
      csv.readStream = readStream;
      return csv;
    }
  };
};
