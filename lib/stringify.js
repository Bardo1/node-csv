// Generated by CoffeeScript 1.3.3

module.exports = function(line, csv) {
  var column, columns, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, newLine, quote, regexp, _i, _j, _line, _ref, _ref1;
  columns = csv.options.to.columns || csv.options.from.columns;
  delimiter = csv.options.to.delimiter || csv.options.from.delimiter;
  quote = csv.options.to.quote || csv.options.from.quote;
  escape = csv.options.to.escape || csv.options.from.escape;
  if (typeof line === 'object') {
    if (!Array.isArray(line)) {
      _line = [];
      if (columns) {
        for (i = _i = 0, _ref = columns.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          column = columns[i];
          _line[i] = typeof line[column] === 'undefined' || line[column] === null ? '' : line[column];
        }
      } else {
        for (column in line) {
          _line.push(line[column]);
        }
      }
      line = _line;
      _line = null;
    } else if (csv.options.to.columns) {
      line.splice(csv.options.to.columns.length);
    }
    if (Array.isArray(line)) {
      newLine = csv.state.countWriten ? csv.options.to.lineBreaks || "\n" : '';
      for (i = _j = 0, _ref1 = line.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
        field = line[i];
        if (typeof field === 'string') {

        } else if (typeof field === 'number') {
          field = '' + field;
        } else if (typeof field === 'boolean') {
          field = field ? '1' : '';
        } else if (field instanceof Date) {
          field = '' + field.getTime();
        }
        if (field) {
          containsdelimiter = field.indexOf(delimiter) >= 0;
          containsQuote = field.indexOf(quote) >= 0;
          containsLinebreak = field.indexOf("\r") >= 0 || field.indexOf("\n") >= 0;
          if (containsQuote) {
            regexp = new RegExp(quote, 'g');
            field = field.replace(regexp, escape + quote);
          }
          if (containsQuote || containsdelimiter || containsLinebreak || csv.options.to.quoted) {
            field = quote + field + quote;
          }
          newLine += field;
        }
        if (i !== line.length - 1) {
          newLine += delimiter;
        }
      }
      line = newLine;
    }
  } else if (typeof line === 'number') {
    line = '' + line;
  }
  return line;
};
